{
  "notifications": [
    {
      "id": "1",
      "title": "Уведомление 1",
      "description": "Произошло какое-то событие",
      "userId": "1"
    },
    {
      "id": "2",
      "title": "Уведомление 2",
      "description": "Произошло какое-то событие",
      "userId": "1",
      "href": "http://localhost:3000/admin"
    },
    {
      "id": "3",
      "title": "Уведомление 3",
      "description": "Произошло какое-то событие",
      "userId": "1",
      "href": "http://localhost:3000/admin"
    },
    {
      "id": "4",
      "title": "Уведомление 4",
      "description": "Произошло какое-то событие",
      "userId": "1"
    },
    {
      "id": "5",
      "title": "Уведомление 1",
      "description": "Произошло какое-то событие",
      "userId": "2"
    }
  ],
  "posts": [
    {
      "id": "1",
      "title": "json-server",
      "userId": "1"
    },
    {
      "id": "2",
      "title": "json-server",
      "userId": "2"
    }
  ],
  "articles": [
    {
      "id": "1",
      "title": "Javascript news",
      "subtitle": "Что нового в JS за 2022 год?",
      "img": "https://teknotower.com/wp-content/uploads/2020/11/js.png",
      "views": 1022,
      "createdAt": "26.02.2022",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        },
        {
          "id": "4",
          "type": "CODE",
          "code": "<!DOCTYPE html>\n<html>\n  <body>\n    <p id=\"hello\"></p>\n\n    <script>\n      document.getElementById(\"hello\").innerHTML = \"Hello, world!\";\n    </script>\n  </body>\n</html>;"
        },
        {
          "id": "5",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        },
        {
          "id": "2",
          "type": "IMAGE",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта"
        },
        {
          "id": "3",
          "type": "CODE",
          "code": "const path = require('path');\n\nconst server = jsonServer.create();\n\nconst router = jsonServer.router(path.resolve(__dirname, 'db.json'));\n\nserver.use(jsonServer.defaults({}));\nserver.use(jsonServer.bodyParser);"
        },
        {
          "id": "7",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        },
        {
          "id": "8",
          "type": "IMAGE",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта"
        },
        {
          "id": "9",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы."
          ]
        }
      ]
    },
    {
      "id": "2",
      "title": "Python news",
      "subtitle": "Что нового в JS за 2022 год?",
      "img": "https://d3mxt5v3yxgcsr.cloudfront.net/courses/15007/course_15007_image.png",
      "views": 50,
      "createdAt": "26.04.2024",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        }
      ]
    },
    {
      "id": "3",
      "title": "Kotlin news",
      "subtitle": "Что нового в JS за 2022 год?",
      "img": "https://groktor.com/wp-content/uploads/2019/08/Kotlin-logo-300x300.png",
      "views": 1022,
      "createdAt": "26.02.2022",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        }
      ]
    },
    {
      "id": "4",
      "title": "Python news",
      "subtitle": "Что нового в JS за 2022 год?",
      "img": "https://d3mxt5v3yxgcsr.cloudfront.net/courses/15007/course_15007_image.png",
      "views": 1500,
      "createdAt": "20.02.2010",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        }
      ]
    },
    {
      "id": "5",
      "title": "Kotlin news",
      "subtitle": "Что нового в JS за 2022 год?",
      "img": "https://groktor.com/wp-content/uploads/2019/08/Kotlin-logo-300x300.png",
      "views": 1000,
      "createdAt": "26.02.2019",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        }
      ]
    },
    {
      "id": "6",
      "title": "Python news",
      "subtitle": "Что нового в JS за 2022 год?",
      "img": "https://d3mxt5v3yxgcsr.cloudfront.net/courses/15007/course_15007_image.png",
      "views": 4000,
      "createdAt": "26.10.2022",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        }
      ]
    },
    {
      "id": "7",
      "title": "Kotlin news",
      "subtitle": "Что нового в JS за 2022 год?",
      "img": "https://groktor.com/wp-content/uploads/2019/08/Kotlin-logo-300x300.png",
      "views": 400,
      "createdAt": "26.12.2022",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        }
      ]
    },
    {
      "id": "8",
      "title": "Python news",
      "subtitle": "Что нового в JS за 2022 год?",
      "img": "https://d3mxt5v3yxgcsr.cloudfront.net/courses/15007/course_15007_image.png",
      "views": 1800,
      "createdAt": "26.02.2023",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        }
      ]
    },
    {
      "id": "9",
      "title": "Kotlin news",
      "subtitle": "Что нового в JS за 2022 год?",
      "img": "https://groktor.com/wp-content/uploads/2019/08/Kotlin-logo-300x300.png",
      "views": 800,
      "createdAt": "26.02.2024",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        }
      ]
    },
    {
      "id": "10",
      "title": "Python news",
      "subtitle": "Что нового в JS за 2022 год?",
      "img": "https://d3mxt5v3yxgcsr.cloudfront.net/courses/15007/course_15007_image.png",
      "views": 900,
      "createdAt": "26.02.2019",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        }
      ]
    },
    {
      "id": "11",
      "title": "Kotlin news 2024",
      "subtitle": "Что нового в JS за 2022 год?",
      "img": "https://groktor.com/wp-content/uploads/2019/08/Kotlin-logo-300x300.png",
      "views": 1050,
      "createdAt": "26.04.2021",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        }
      ]
    },
    {
      "id": "12",
      "title": "Python news 2019",
      "subtitle": "Что нового в JS за 2022 год?",
      "img": "https://d3mxt5v3yxgcsr.cloudfront.net/courses/15007/course_15007_image.png",
      "views": 999,
      "createdAt": "26.02.2019",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        }
      ]
    },
    {
      "id": "13",
      "title": "Kotlin news information",
      "subtitle": "Что нового в JS за 2022 год?",
      "img": "https://groktor.com/wp-content/uploads/2019/08/Kotlin-logo-300x300.png",
      "views": 100,
      "createdAt": "22.12.2018",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        }
      ]
    },
    {
      "id": "14",
      "title": "Python news",
      "subtitle": "Что нового в JS за 2022 год?",
      "img": "https://d3mxt5v3yxgcsr.cloudfront.net/courses/15007/course_15007_image.png",
      "views": 200,
      "createdAt": "23.02.2024",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        }
      ]
    },
    {
      "id": "15",
      "title": "Kotlin news",
      "subtitle": "Что нового в JS за 2022 год?",
      "img": "https://groktor.com/wp-content/uploads/2019/08/Kotlin-logo-300x300.png",
      "views": 1000,
      "createdAt": "26.02.2017",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        }
      ]
    },
    {
      "id": "16",
      "title": "Python news",
      "subtitle": "Что нового в JS за 2022 год?",
      "img": "https://d3mxt5v3yxgcsr.cloudfront.net/courses/15007/course_15007_image.png",
      "views": 100,
      "createdAt": "26.02.2015",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        }
      ]
    },
    {
      "id": "17",
      "title": "Kotlin news",
      "subtitle": "Что нового в JS за 2022 год?",
      "img": "https://groktor.com/wp-content/uploads/2019/08/Kotlin-logo-300x300.png",
      "views": 300,
      "createdAt": "26.02.2020",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        }
      ]
    },
    {
      "id": "18",
      "title": "Экономическая статья - ИНФЛЯЦИЯ!",
      "subtitle": "Экономика",
      "img": "https://www.mirea.ru/upload/iblock/7cf/vvp_rf2018_1.jpg",
      "views": 1022,
      "createdAt": "26.02.2022",
      "userId": "1",
      "type": [
        "ECONOMICS"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        }
      ]
    },
    {
      "id": "18",
      "title": "Научная статья - Биология",
      "subtitle": "БиологиЯ",
      "img": "https://w7.pngwing.com/pngs/706/164/png-transparent-amazon-com-science-dietary-supplement-food-health-science-food-logo-symmetry.png",
      "views": 1022,
      "createdAt": "26.02.2022",
      "userId": "1",
      "type": [
        "SCIENCE"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        }
      ]
    }
  ],
  "comments": [
    {
      "id": "1",
      "text": "some comment",
      "articleId": "1",
      "userId": "1"
    },
    {
      "id": "2",
      "text": "new comment",
      "articleId": "1",
      "userId": "2"
    },
    {
      "id": "3",
      "text": "new comment",
      "articleId": "1",
      "userId": "2"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": "aaa",
      "id": "P7hbwpR"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": "hello",
      "id": "oZsfC4g"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": "hello",
      "id": "s72EXFV"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": "Irina,hello",
      "id": "b5vaL0Z"
    },
    {
      "articleId": "1",
      "userId": "2",
      "text": "hello,user",
      "id": "X1Lro6Y"
    },
    {
      "articleId": "1",
      "userId": "2",
      "text": "hello world",
      "id": "WZ37I9C"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": "vghvgjh",
      "id": "_SOZCVr"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": "bb",
      "id": "BjXH3Uo"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": " nm,",
      "id": "fV_GiiO"
    },
    {
      "articleId": "3",
      "userId": "1",
      "text": "hello",
      "id": "2hmwWL9"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": "hi",
      "id": "flCvc60"
    },
    {
      "articleId": "3",
      "userId": "1",
      "text": "kotlin",
      "id": "oV8lhN-"
    },
    {
      "articleId": "2",
      "userId": "1",
      "text": "ssda",
      "id": "VEXhPnM"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": "d",
      "id": "1Vb2VWG"
    },
    {
      "articleId": "2",
      "userId": "1",
      "text": "dfdf",
      "id": "KPIZodX"
    },
    {
      "articleId": "4",
      "userId": "1",
      "text": "ddd",
      "id": "LvBgsOG"
    },
    {
      "articleId": "18",
      "userId": "1",
      "text": "fff",
      "id": "Y04eikS"
    },
    {
      "articleId": "13",
      "userId": "1",
      "text": "yy",
      "id": "ltIpbLX"
    },
    {
      "articleId": "13",
      "userId": "1",
      "text": "334",
      "id": "OufIZ5D"
    },
    {
      "articleId": "4",
      "userId": "1",
      "text": "dfdf",
      "id": "9KKJXSP"
    },
    {
      "articleId": "4",
      "userId": "1",
      "text": "df",
      "id": "2jWL4NH"
    },
    {
      "articleId": "4",
      "userId": "1",
      "text": "vv",
      "id": "gx5DaWh"
    },
    {
      "articleId": "14",
      "userId": "1",
      "text": "ddd",
      "id": "gKSHREJ"
    },
    {
      "articleId": "14",
      "userId": "1",
      "text": "ss",
      "id": "tNwBP9M"
    },
    {
      "articleId": "4",
      "userId": "1",
      "text": "ss",
      "id": "ReXw1sd"
    },
    {
      "articleId": "4",
      "userId": "1",
      "text": "sss",
      "id": "-Ntagn9"
    },
    {
      "articleId": "bwX0lcB",
      "userId": "4",
      "text": "text",
      "id": "UpNv1OK"
    },
    {
      "articleId": "2Xw9dRs",
      "userId": "4",
      "text": "text",
      "id": "pSPXqm_"
    },
    {
      "articleId": "8",
      "userId": "1",
      "text": "5565",
      "id": "RnwTfaO"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": "Lorem ipsum dolor sit amet consectetur, adipisicing elit. Saepe perferendis tempore nihil ducimus libero error delectus non similique enim placeat, recusandae veritatis cumque quisquam hic unde harum autem ut accusantium? Quaerat in odit fugiat eos hic et esse tenetur inventore odio molestias dignissimos maxime illum ex non, sed sint eum! Ullam ut saepe hic molestiae nam accusantium omnis placeat odio. Ipsum esse maiores quia voluptatum amet. Adipisci eligendi commodi accusamus error ab, corrupti, accusantium, quo necessitatibus sunt quae labore. Excepturi similique dolore quis tempore cum ducimus voluptate debitis in ad! Quas quibusdam, esse cum nihil sequi dignissimos ut similique accusamus. Sint quidem sapiente est vel! Numquam atque obcaecati a? Fugit quam eaque fugiat repellat dolorum aut? Dolores facilis nulla aspernatur. Recusandae blanditiis voluptates error nostrum tempore rerum iure adipisci sit enim hic. Repudiandae ullam consequatur tempora, fugit quia sed nulla optio tenetur, voluptate placeat molestias provident architecto delectus? Cum, dolore? Accusamus quisquam nemo doloribus officiis eligendi! Culpa error facere vel minus veritatis, adipisci provident ipsum, a inventore distinctio ut labore quibusdam fuga eum! Tempore explicabo nulla delectus, magni rem dolor. Neque id esse, illo natus similique commodi, nam amet exercitationem modi itaque incidunt accusantium nemo. Id perspiciatis praesentium inventore quos voluptatibus! Accusamus blanditiis ex adipisci expedita at ab minus odit! Corrupti vero est suscipit dolore culpa dicta et illum accusamus. Culpa explicabo nostrum quia sunt fuga, quidem ducimus. Nobis in dolor dicta velit doloribus dolores ad non cupiditate suscipit labore! Quam nisi corrupti tenetur doloremque non, labore minus debitis dolore doloribus molestiae natus esse ducimus. Quis, impedit aliquid officiis possimus repellat cupiditate ad, eligendi fuga omnis, fugiat ut doloribus et? Placeat suscipit facere molestias voluptate ducimus ipsa voluptates culpa non nisi asperiores, similique deserunt fugiat excepturi, inventore maxime quia ut minima optio tempore accusamus nobis! Eos deserunt qui quibusdam. Optio! Dignissimos animi in nostrum rem eaque eos, quis dolor perferendis voluptatem ex quasi dolorum expedita autem sit aspernatur quam eum iusto. Ratione quis ipsa vero laudantium, consequatur consectetur sequi libero? Assumenda dicta quos voluptas doloremque deleniti quia dolores delectus, molestiae quibusdam quisquam mollitia, ea ad vero? Reprehenderit odio, alias debitis rerum aperiam architecto ipsum cumque veniam maxime ducimus libero voluptate. Consequatur rem animi aliquid quasi eos sint, quibusdam sit molestiae voluptatem tempora beatae odio, veniam laudantium rerum quidem perferendis id repellat natus possimus accusantium officiis accusamus at soluta nisi! Vero? Ducimus explicabo quasi suscipit optio reiciendis possimus voluptatibus veniam accusantium. Aperiam, reprehenderit, inventore corrupti pariatur dolorem ab, velit voluptas enim mollitia iure minima quibusdam nisi ipsam. Porro, ab ad? Quae? Praesentium iure rerum, molestiae totam asperiores quas nihil voluptatum reiciendis distinctio delectus assumenda provident non accusamus ullam excepturi expedita omnis illum perspiciatis suscipit. Facere atque possimus magnam. Asperiores, commodi exercitationem? Pariatur quas quia aperiam eos consequatur ducimus veritatis sit assumenda qui harum. Non itaque reiciendis placeat sapiente repellat fuga vero atque cum illo temporibus, fugiat tenetur. Ullam sint totam eum? Ex illum laudantium voluptatem mollitia eaque, provident dolores voluptates odio exercitationem. Earum saepe rerum eveniet ad, sint voluptates, culpa amet laboriosam vero dolore voluptatem modi, dolor magni quis ipsa in! Inventore ipsam vel, quam voluptate quas hic blanditiis veniam praesentium, iure qui temporibus debitis odit quasi explicabo fuga, eveniet velit? Maiores quas dolores sequi excepturi eum numquam ullam iste atque! Velit sequi dolores voluptatem asperiores ipsa molestias similique laudantium animi voluptas voluptatibus dicta, quam sapiente beatae temporibus incidunt reprehenderit nemo perspiciatis totam cupiditate, architecto ex? Praesentium unde ipsam odio itaque? Dolor qui iure esse quasi mollitia sed nesciunt nam reprehenderit veniam. Quas natus distinctio quibusdam dolorum iure, deserunt eaque, error voluptas, reprehenderit ad explicabo dolore consequatur qui? Recusandae, sapiente sed? Perspiciatis delectus libero illo, id ab fuga blanditiis quibusdam natus molestiae hic minima beatae corporis eius enim cupiditate ex consectetur eligendi laudantium vel! Saepe eum perferendis aspernatur. Odit, at repellat. Aut ex enim non reiciendis illo rem cupiditate natus perferendis voluptatem expedita cum, quaerat corrupti quidem soluta quis? Repudiandae dolores reiciendis amet accusamus vitae beatae, similique fuga placeat maiores provident. Dicta voluptatem natus unde commodi amet provident officiis excepturi, fugit laudantium rerum fuga nemo assumenda eius nobis necessitatibus? Vitae autem cupiditate aspernatur qui corporis temporibus distinctio ad accusamus hic necessitatibus? Adipisci, reiciendis! Quam quibusdam necessitatibus dolorem ab! Maiores illo voluptatem esse aliquam? Eveniet id cupiditate est debitis accusantium? Dolorem reiciendis hic cumque accusantium autem debitis consectetur ipsam ullam amet a! Exercitationem ipsum, ut minima cupiditate, ab sunt fugit, odio debitis voluptates architecto atque dolorem aut totam iste. Provident eum, earum ea tenetur voluptatem quis? Animi quae asperiores accusantium ipsa excepturi? Impedit nihil necessitatibus deleniti pariatur et? Ex optio voluptatibus expedita tempora iste incidunt culpa consectetur, alias explicabo aut at, velit inventore aliquid molestiae perferendis ut quae beatae commodi. Assumenda, ut. Quod omnis iure ullam corporis, eligendi amet sequi odio deserunt cupiditate aut ipsam nostrum, a vitae. Harum, autem, illum, veniam voluptatem quasi ullam et ipsa voluptates aliquam quae vitae necessitatibus? Id quo, molestiae sint suscipit voluptatem fugiat possimus pariatur blanditiis, voluptas impedit non. Voluptatum quia non cupiditate. Recusandae modi facere assumenda iste porro cum ipsum nisi, corporis nesciunt repellat provident! Magnam nihil dolor adipisci pariatur, similique voluptates distinctio saepe vitae incidunt aliquam iusto at officia, facilis dignissimos? Aperiam voluptate aspernatur magnam, libero sint recusandae dignissimos atque ea ipsa, facilis ducimus! Illum nemo officiis commodi mollitia, ipsam ipsum odio voluptas esse ullam incidunt quisquam corrupti, iusto aliquid tempora iure delectus asperiores inventore molestiae alias cumque recusandae! Magni non quam eius neque. Ipsum optio, eos illum nemo eaque ab perferendis aliquam reiciendis atque, esse mollitia, in culpa. Illum, pariatur! Quis voluptate quas voluptates minima dolor optio doloremque itaque, explicabo corporis, autem officiis. Dicta quo soluta nobis eius esse sit reprehenderit nesciunt magnam. Natus reiciendis facilis illum cum assumenda, voluptatum molestiae? Omnis nam doloribus eligendi temporibus unde, libero voluptatum explicabo voluptas excepturi laborum! Pariatur ad ipsum dicta dolore, impedit similique quaerat, praesentium voluptatibus tempore nam nostrum perspiciatis vero nihil, distinctio cumque ut. Perferendis nostrum porro commodi quod rerum esse, magnam tenetur nulla earum. Veritatis at labore consequuntur molestiae recusandae praesentium porro voluptas nobis iusto, omnis perspiciatis dolorem reprehenderit, similique asperiores consectetur deleniti quae velit odio provident minus. Exercitationem ipsam nemo natus ab inventore! Ducimus modi quis tempora iusto, repudiandae eveniet itaque quas optio, corporis consequuntur fuga odio illum officiis, quod voluptate molestias voluptatem similique dicta? Unde aperiam atque necessitatibus? Dolore facere earum aspernatur! Consequatur, atque fugit architecto suscipit autem voluptatem ut obcaecati aspernatur vitae nesciunt, cum asperiores dolorum iste quod ratione expedita voluptates consequuntur illum eos? Dolore unde incidunt qui ea blanditiis rerum! Magni pariatur, sunt nihil nisi harum voluptatibus aut itaque, sapiente optio ducimus impedit quidem odio excepturi soluta nemo expedita explicabo, corrupti deserunt? Voluptates distinctio, recusandae itaque animi similique quo molestias! Ut, sapiente sequi fuga consectetur maxime, enim quaerat quis placeat at quasi harum, aperiam veritatis. Quisquam dolore cupiditate maiores quas commodi quaerat explicabo facere, hic optio ullam laboriosam, nobis odio. Velit culpa quaerat magnam veritatis cumque error eius voluptatum saepe provident, odit, quasi aut nisi sequi, eligendi quas facere fugit porro quibusdam perferendis? Consequatur non odit doloribus impedit aut rem? In corporis dolorum voluptas, fuga explicabo impedit debitis tenetur laudantium quae, quaerat inventore eveniet, quos ut aut quis veritatis. Minus iusto voluptates ducimus dignissimos totam aliquid porro, modi earum recusandae? Vel dolorum aut facilis corporis minus quos possimus ad, itaque ipsum maiores, rem quod ducimus debitis? Provident, nisi consequatur sapiente similique repellat praesentium deleniti consequuntur! Modi dolore alias delectus quia. Aliquid, ex? Mollitia distinctio quasi animi aliquid dolorum quis omnis ut minus reiciendis officiis maxime quos impedit dignissimos labore incidunt adipisci illo dicta delectus, minima, facilis harum, ipsam ab. Odio. Veritatis, placeat inventore nemo exercitationem quibusdam sint doloribus nulla adipisci voluptatibus, sunt quasi, voluptatem ullam blanditiis! Quisquam ex id, quam saepe cum laboriosam eaque a eius, sit aperiam molestiae enim? Itaque magni omnis animi, molestiae provident praesentium natus quo dolor earum rem dolorem sed eos sapiente delectus aut recusandae atque sunt esse non, libero fugit necessitatibus pariatur? Quia, minus culpa. Sint, voluptatum quaerat veniam minus placeat tempore quia eum iure saepe, vel ut repudiandae accusamus ad, debitis sunt nam. Voluptas molestias unde quisquam, praesentium ipsa velit alias explicabo nesciunt. Consectetur. Voluptas, harum error ratione voluptate soluta rem distinctio nulla repellat porro eius temporibus quas ipsum officiis ipsa! Aut voluptatem enim totam cumque corrupti deserunt aliquid minima repellat, doloremque natus qui? Autem hic incidunt, tenetur aliquid recusandae magni ullam quisquam veritatis. Delectus adipisci deserunt obcaecati excepturi mollitia tempora? Architecto voluptatem eius pariatur esse perferendis provident facere. Porro, quibusdam! Temporibus, quam repudiandae! Tenetur mollitia corrupti ratione sunt quaerat praesentium vel possimus temporibus nesciunt sint inventore, aspernatur sequi odit blanditiis soluta cupiditate laudantium, nisi eaque commodi sit consectetur dolorem quisquam. Nostrum, alias suscipit. Minus, ipsum doloribus provident placeat voluptatum adipisci iste tenetur accusantium autem perferendis quibusdam asperiores sit! Nihil, beatae, reprehenderit iusto at dignissimos atque hic asperiores, quae molestias dolor pariatur! Impedit, expedita. Similique nulla, vero fugit at quos cum est iste ea eius consequatur neque unde, suscipit quia? Laborum laudantium in molestiae impedit explicabo cum, iusto aliquid aspernatur. Harum unde ipsum hic! Eveniet sit qui, porro ducimus alias beatae velit excepturi maxime neque quis eaque asperiores aliquam a doloribus exercitationem totam culpa ut, eius fugit deleniti eos labore rem? Reiciendis, ea optio. Voluptatem ipsam officia impedit voluptas, asperiores, dolorum et, ipsa tempora natus deserunt a illum optio recusandae tenetur aut molestias? Autem, iusto perferendis dolore ullam minima illum ipsam sint nulla quo! Deserunt corrupti quia maxime consequuntur ex nemo saepe quod asperiores voluptas hic harum aliquid vitae magni, commodi molestiae sapiente ab recusandae dolore aspernatur vero possimus eos voluptatibus. Debitis, asperiores cumque? Sunt, harum porro numquam dolore maxime maiores excepturi cum vero inventore cupiditate! Itaque, aliquam officia! Repudiandae nobis veniam architecto fugit laudantium alias aut veritatis eos, consequatur voluptatum possimus eius dolorem. Corrupti non nesciunt consequuntur officiis voluptatibus deserunt. Quia deleniti aliquid neque laborum laboriosam sit ipsam ex, et iste consequuntur quisquam nobis soluta animi atque maiores libero autem. Eveniet, at optio. Laborum, eveniet maiores iure ratione, praesentium in ea odit aspernatur quisquam recusandae placeat, ex at illum sunt necessitatibus amet possimus numquam quos quo. Dolores ducimus quas vel illo at eligendi? Eligendi nulla ex provident explicabo alias voluptates quidem quis adipisci consequuntur atque, ab praesentium modi sed cupiditate temporibus illo. Ut facilis, ab ex dolorem eveniet magni quidem laboriosam quos suscipit! Modi repellendus commodi dolor aliquid aliquam? A corporis, pariatur enim error eveniet iure nihil nemo? Nemo quasi illum, minus numquam corporis sunt veniam. Voluptatibus quae aut perferendis ea similique. Ratione. Illum itaque labore, nemo voluptatibus dicta cumque quo aut ipsa eligendi dolore placeat, delectus vero dolorum soluta facere id corrupti sunt ullam nobis harum iure suscipit iste. Magni, cum repellat. Reprehenderit placeat totam consequatur inventore accusamus. Amet laudantium excepturi, laborum non aspernatur reiciendis quo molestiae dolorum sit vero earum perferendis provident libero quam voluptas suscipit eos illum corrupti. Dolor, magnam? Quo error facere quidem cumque quam minus aliquid dolore, dignissimos doloremque rerum possimus magni hic eum. Laudantium placeat, voluptate consequatur veniam vel mollitia ipsam nisi natus aperiam. Ratione, iste iure! Architecto quas iure saepe totam laboriosam id iste magnam excepturi sit ad quia odit ipsum vitae harum voluptatum tempora voluptates, placeat ex provident reprehenderit praesentium doloremque cum alias amet. Ea. Assumenda, quasi explicabo sapiente molestiae odio praesentium ad sed, earum rem obcaecati, aliquam repellat quia magni eveniet reprehenderit pariatur! Magnam voluptates similique veniam ipsa repudiandae officiis vero dignissimos enim ullam. Esse quos nam dolorum, tempore corporis id est eaque assumenda quo veritatis accusamus magni repellat eligendi aspernatur quidem, laboriosam nesciunt iure quod illo molestias aliquid? Deserunt magnam itaque consequuntur repellat. Aut optio delectus, fuga excepturi deleniti eveniet sequi quibusdam. Qui, beatae dicta. Adipisci, repellendus quas architecto dignissimos dicta veritatis possimus quo fuga quod officia quaerat pariatur nobis quis esse iusto. Dolorum, voluptate consequuntur iusto dicta illum culpa velit temporibus rem itaque maxime eligendi nulla illo tempore laborum rerum, optio, porro ducimus quia reprehenderit fuga perferendis quae totam sequi. Esse, eveniet? Incidunt maxime in enim laudantium. Sit unde sunt, sed laudantium similique praesentium, magnam quaerat fugit non repudiandae vitae eveniet nisi. Soluta omnis ipsum blanditiis et voluptas laborum odit nulla optio? Iure neque tempora amet necessitatibus! Aliquam laudantium, modi nam in molestias nulla perferendis et obcaecati ipsa facere aut. Optio, deserunt dicta! Maiores et illum omnis sint nostrum. Asperiores, placeat at. Autem velit voluptatibus itaque rem amet commodi esse dignissimos quas obcaecati? Culpa laborum voluptatem ullam debitis, nesciunt porro! Voluptates pariatur aperiam nisi velit consequuntur corrupti a reprehenderit? Natus, at voluptatum. Vel non eaque amet expedita voluptates est harum numquam. Tempore consequuntur quae ducimus rem, expedita iusto neque nobis iste dicta nam! Sed eaque eveniet rem vero placeat consectetur fugit cum. Et aut cumque dolore modi atque. Expedita temporibus optio ducimus dignissimos fugit voluptatem doloremque reprehenderit, eum molestiae incidunt vitae quisquam. Aliquam officia totam explicabo error. Impedit voluptatibus aspernatur omnis dolorum! Aliquam excepturi explicabo adipisci similique quaerat, quia dolor, iure quis, eaque voluptates dolores delectus dolorum dolorem aliquid asperiores modi tenetur perspiciatis eveniet? Excepturi nobis similique magni! Debitis blanditiis repellendus beatae? Consequatur magnam autem laborum. Perspiciatis earum aut iusto exercitationem fuga ab, quos, explicabo labore natus sed fugiat accusantium, impedit modi nisi esse magni. Consequuntur ut tempore unde ipsa, facere necessitatibus. Fuga inventore quidem blanditiis maiores pariatur libero minima exercitationem dolorem praesentium itaque sit error nemo at reprehenderit quisquam possimus dignissimos, est cumque voluptas adipisci harum velit totam tempora! Suscipit, ex. Ducimus doloribus aperiam eligendi, qui voluptatibus cum, laboriosam consectetur obcaecati vero omnis cumque similique laborum quisquam labore tempore debitis facilis maxime temporibus. Debitis aspernatur doloremque nihil earum facilis eligendi rem. Aliquam ipsum molestiae, laudantium laborum suscipit nesciunt corporis deleniti maxime dolorem impedit excepturi vero aliquid ex libero architecto blanditiis, eveniet sint vitae ab sequi. Suscipit incidunt id itaque quia tempora? Maxime atque ut harum ad, molestias laudantium. Officia alias hic porro molestias aspernatur corrupti, ducimus esse, dolor tempore blanditiis ad iste cumque deleniti. Itaque rem, magnam velit tempore enim ipsa. Hic, blanditiis. Nulla corporis, omnis voluptates voluptas explicabo pariatur magnam necessitatibus perspiciatis sequi, adipisci amet incidunt repellat possimus facere error beatae ad. Eius nihil at recusandae sunt, velit repellat rerum. Aliquam et dolor, molestias eos ea repudiandae hic ratione neque molestiae tenetur voluptatum iure natus fuga sapiente veniam itaque! Mollitia nostrum voluptatum et ratione incidunt quos ipsam reprehenderit voluptatem sit. Quaerat consectetur, aperiam beatae adipisci sequi modi fugiat error vel totam deserunt amet quisquam excepturi eaque, sit ipsam quod expedita magni iure repudiandae facere omnis vero harum. Voluptatum, sapiente qui? Quae pariatur expedita natus tenetur minima ducimus dolore, beatae facere corporis nisi atque distinctio a odit ipsa error quisquam. Distinctio omnis nostrum accusantium amet excepturi exercitationem est, unde quam rem. Quam hic doloribus cupiditate veniam? Tempore incidunt neque qui molestiae architecto explicabo alias dolorum minima vitae cum, soluta porro ea nisi quo impedit illo harum rerum recusandae? Aperiam, excepturi impedit. Similique labore deserunt iusto beatae cum sapiente laborum ut magni temporibus optio impedit, nihil aperiam necessitatibus, explicabo quaerat! Praesentium ea quas nobis? Sit sint sed exercitationem inventore sunt. Cum, suscipit? Sequi aliquam reprehenderit laudantium doloribus quos vero cupiditate sunt consequuntur nesciunt, consectetur est alias possimus repellat velit incidunt similique, neque officiis accusamus debitis magnam nulla repudiandae aut! Necessitatibus, quia? Fugiat. Sunt nisi vel laudantium dolor rerum omnis minus fugiat magnam consequuntur maxime deleniti illum accusantium, commodi, consequatur, corporis eos natus quis eligendi veniam ad ullam perspiciatis. Non a reiciendis sed! Facilis non natus expedita magni! Placeat quibusdam voluptates, maiores in dolorem ut laboriosam facere, blanditiis voluptatibus distinctio porro? Exercitationem odio aliquid obcaecati voluptatibus nobis dolorem officiis repudiandae debitis, culpa ad. Modi iste saepe perspiciatis aut minima, rem quam officiis beatae unde praesentium accusamus dolorum ipsa eveniet ducimus nobis illum ratione provident aliquid velit dolorem, cumque, laboriosam laborum quasi possimus. Natus. Quo vero earum cupiditate eos at! Magni beatae dolorem totam voluptatum laborum ex numquam nihil ipsa, nam animi repellat. Optio, animi sint! Explicabo dolorem a exercitationem alias porro? Sunt, tempora? Voluptas, dicta cum, ullam necessitatibus, quia omnis inventore perspiciatis sapiente maiores fugit corrupti ut facilis quisquam velit veritatis quos quasi dignissimos voluptatem provident cumque? Error non in illo amet quidem. Sit maiores accusantium dicta minus consequatur nulla aperiam omnis vitae unde sint, expedita, possimus suscipit. Cum rem voluptatem eos porro sequi, itaque debitis perferendis, in culpa doloremque omnis sint quibusdam? Dolores magni debitis neque natus? Sit quidem a, et officia repellendus pariatur. Ad veritatis quidem esse quaerat ipsum qui at, magnam neque ullam exercitationem ex consequatur aut blanditiis laboriosam rem? Voluptates natus nam minus optio exercitationem sint atque alias maiores aperiam nesciunt quibusdam quaerat temporibus enim doloribus eveniet dolore explicabo consectetur similique blanditiis, necessitatibus inventore sapiente? Sint qui culpa in. Natus, ratione tempore. Vitae, magnam. Ipsam, officia nobis. Aliquid sint ab exercitationem nihil, temporibus debitis doloribus rerum omnis libero assumenda fuga totam repellat autem perspiciatis nulla magnam numquam labore deserunt. Explicabo mollitia dolores officiis facilis sint, debitis, itaque, quis nihil delectus esse tenetur? Nam, magnam consectetur itaque delectus voluptas a dolor aperiam saepe, asperiores expedita eligendi nostrum possimus laudantium sunt! Consequatur doloremque sunt sequi nostrum? Odit, magnam minus! Alias, aliquid. Nihil maxime cumque fugit sequi, non magni voluptate alias deleniti eligendi nesciunt consectetur possimus commodi aliquid eveniet fugiat tenetur ea. Facilis tenetur eos molestiae laboriosam perferendis, placeat eaque soluta quisquam autem temporibus nesciunt modi laudantium enim nam architecto reprehenderit animi minus eveniet illo facere, ipsa quae, unde a. Vero, modi. Repellat quisquam, odit neque magni officiis iure dolores ducimus hic id aspernatur ea harum debitis reprehenderit impedit ullam molestiae dicta vel corporis distinctio repudiandae at cumque earum. Vel, rem deleniti. Ipsa sed ut laborum? Veritatis consequuntur iste sequi vel alias incidunt, a, porro adipisci delectus dignissimos aperiam. Cum sit, provident repudiandae accusamus maiores quis autem vel labore sunt velit non! Veniam necessitatibus quae, voluptate ullam molestias vel ipsa minima explicabo nisi recusandae vero! Sequi, non nemo? Necessitatibus veritatis labore magnam, error ullam explicabo est dolorem eos consequatur facilis sapiente mollitia. Dolorem natus consequuntur blanditiis, vitae accusantium quibusdam reiciendis voluptate consectetur tenetur illo itaque sit animi quidem repellat aut similique quaerat in? Iusto quas aut culpa aliquid quod hic rerum possimus?",
      "id": "xZDPzcD"
    },
    {
      "articleId": "10",
      "userId": "1",
      "text": "cfhfgh",
      "id": "wTWw1q6"
    },
    {
      "articleId": "10",
      "userId": "1",
      "text": "ggh",
      "id": "ldhyAwX"
    },
    {
      "articleId": "18",
      "userId": "1",
      "text": "hjh",
      "id": "Plj4WWc"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": "ghvb",
      "id": "XOiCRf5"
    },
    {
      "articleId": "4",
      "userId": "1",
      "text": "456",
      "id": "HOMF80W"
    }
  ],
  "users": [
    {
      "id": "1",
      "username": "admin",
      "password": "123",
      "roles": [
        "ADMIN"
      ],
      "features": {
        "isArticleRatingEnabled": true,
        "isCounterEnabled": true,
        "isAppRedesigned": true
      },
      "jsonSettings": {
        "theme": "app_dark_theme",
        "isFirstVisit": true,
        "settingsPageHasBeenOpen": false,
        "isArticlesPageWasOpened": true
      },
      "avatar": "https://cdn.fishki.net/upload/post/2019/10/28/3125789/depositphotos-hacker.jpg"
    },
    {
      "id": "2",
      "username": "user",
      "password": "123",
      "roles": [
        "USER"
      ],
      "features": {
        "isArticleRatingEnabled": false,
        "isCounterEnabled": false,
        "isAppRedesigned": false
      },
      "jsonSettings": {
        "theme": "app_dark_theme",
        "isFirstVisit": true,
        "settingsPageHasBeenOpen": false,
        "isArticlesPageWasOpened": true
      },
      "avatar": "https://papik.pro/grafic/uploads/posts/2023-04/1682609980_papik-pro-p-smail-podderzhka-kartinka-png-46.png"
    },
    {
      "id": "3",
      "username": "manager",
      "password": "123",
      "roles": [
        "MANAGER"
      ],
      "features": {
        "isArticleRatingEnabled": false,
        "isCounterEnabled": true
      },
      "jsonSettings": {
        "theme": "app_daring_theme",
        "isFirstVisit": true,
        "settingsPageHasBeenOpen": false,
        "isArticlesPageWasOpened": true
      },
      "avatar": "https://papik.pro/grafic/uploads/posts/2023-04/1682609980_papik-pro-p-smail-podderzhka-kartinka-png-46.png"
    },
    {
      "id": "4",
      "username": "testuser",
      "password": "123",
      "roles": [
        "USER"
      ],
      "features": {
        "isArticleRatingEnabled": true,
        "isCounterEnabled": false
      },
      "jsonSettings": {
        "theme": "app_dark_theme",
        "isFirstVisit": true,
        "settingsPageHasBeenOpen": false,
        "isArticlesPageWasOpened": true
      },
      "avatar": "https://papik.pro/grafic/uploads/posts/2023-04/1682609980_papik-pro-p-smail-podderzhka-kartinka-png-46.png"
    }
  ],
  "profile": [
    {
      "id": "1",
      "first": "Irina",
      "lastname": "Perezhegina",
      "age": 34,
      "currency": "RUB",
      "country": "Belarus",
      "city": "Tyumen",
      "username": "admin",
      "avatar": "http://kartinkof.club/uploads/posts/2022-03/1648644352_13-kartinkof-club-p-smeshnie-kartinki-khaski-13.jpg"
    },
    {
      "id": "2",
      "first": "Den",
      "lastname": "Petrov",
      "age": 25,
      "currency": "RUB",
      "country": "Belarus",
      "city": "Moskow",
      "username": "user",
      "avatar": "https://papik.pro/grafic/uploads/posts/2023-04/1682609980_papik-pro-p-smail-podderzhka-kartinka-png-46.png"
    },
    {
      "id": "4",
      "first": "Test",
      "lastname": "Test",
      "age": 25,
      "currency": "RUB",
      "country": "Belarus",
      "city": "Moskow",
      "username": "testuser",
      "avatar": "https://papik.pro/grafic/uploads/posts/2023-04/1682609980_papik-pro-p-smail-podderzhka-kartinka-png-46.png"
    }
  ],
  "article-ratings": [
    {
      "id": "1",
      "rate": 4,
      "feedback": "Хорошая статья",
      "userId": "2",
      "articleId": "1"
    },
    {
      "id": "2",
      "rate": 4,
      "feedback": "Супер статья",
      "userId": "2",
      "articleId": "2"
    },
    {
      "id": "3",
      "rate": 4,
      "feedback": "Плохая статья",
      "userId": "2",
      "articleId": "2"
    },
    {
      "articleId": "4",
      "userId": "2",
      "rate": 4,
      "id": "A1YXVMn"
    },
    {
      "articleId": "4",
      "userId": "2",
      "rate": 4,
      "id": "5DUBU1K"
    },
    {
      "articleId": "13",
      "userId": "2",
      "rate": 4,
      "feedback": "sss",
      "id": "3n08Qa2"
    },
    {
      "articleId": "3",
      "userId": "2",
      "rate": 4,
      "feedback": "good",
      "id": "UYAW7lp"
    },
    {
      "articleId": "17",
      "userId": "2",
      "rate": 4,
      "feedback": "оппп",
      "id": "LlnehCC"
    },
    {
      "articleId": "5",
      "userId": "2",
      "rate": 4,
      "feedback": "eee",
      "id": "NsSMfFD"
    },
    {
      "articleId": "18",
      "userId": "2",
      "rate": 4,
      "feedback": "",
      "id": "yjCi26c"
    },
    {
      "articleId": "oJQtb6L",
      "userId": "4",
      "rate": 5,
      "feedback": "feedback",
      "id": "X7NKRcw"
    },
    {
      "articleId": "8",
      "userId": "1",
      "rate": 4,
      "feedback": "555",
      "id": "_zBhD7a"
    },
    {
      "articleId": "1",
      "userId": "1",
      "rate": 2,
      "id": "m18d05D"
    },
    {
      "articleId": "10",
      "userId": "1",
      "rate": 3,
      "feedback": "",
      "id": "-ATpMd3"
    },
    {
      "articleId": "18",
      "userId": "1",
      "rate": 3,
      "feedback": "",
      "id": "IVFTh2x"
    },
    {
      "articleId": "4",
      "userId": "1",
      "rate": 3,
      "feedback": "56",
      "id": "p4GDG-p"
    }
  ],
  "profile-ratings": [
    {
      "id": "1",
      "rate": 4,
      "feedback": "Плохо",
      "userId": "1",
      "profileId": "1"
    },
    {
      "id": "2",
      "rate": 4,
      "feedback": "Класс",
      "userId": "1",
      "profileId": "2"
    },
    {
      "id": "3",
      "rate": 4,
      "feedback": "Отличный профиль",
      "userId": "2",
      "profileId": "2"
    }
  ]
}